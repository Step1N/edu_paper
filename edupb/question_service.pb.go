// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: question_service.proto

package edupb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateQueSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSet *QueSet `protobuf:"bytes,1,opt,name=QueSet,proto3" json:"QueSet,omitempty"`
}

func (x *CreateQueSetRequest) Reset() {
	*x = CreateQueSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueSetRequest) ProtoMessage() {}

func (x *CreateQueSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_question_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueSetRequest.ProtoReflect.Descriptor instead.
func (*CreateQueSetRequest) Descriptor() ([]byte, []int) {
	return file_question_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateQueSetRequest) GetQueSet() *QueSet {
	if x != nil {
		return x.QueSet
	}
	return nil
}

type CreateQueSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateQueSetResponse) Reset() {
	*x = CreateQueSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueSetResponse) ProtoMessage() {}

func (x *CreateQueSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_question_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueSetResponse.ProtoReflect.Descriptor instead.
func (*CreateQueSetResponse) Descriptor() ([]byte, []int) {
	return file_question_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateQueSetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SearchQueSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SearchQueSetRequest) Reset() {
	*x = SearchQueSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchQueSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueSetRequest) ProtoMessage() {}

func (x *SearchQueSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_question_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueSetRequest.ProtoReflect.Descriptor instead.
func (*SearchQueSetRequest) Descriptor() ([]byte, []int) {
	return file_question_service_proto_rawDescGZIP(), []int{2}
}

func (x *SearchQueSetRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SearchQueSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueSet *QueSet `protobuf:"bytes,1,opt,name=QueSet,proto3" json:"QueSet,omitempty"`
}

func (x *SearchQueSetResponse) Reset() {
	*x = SearchQueSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchQueSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueSetResponse) ProtoMessage() {}

func (x *SearchQueSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_question_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueSetResponse.ProtoReflect.Descriptor instead.
func (*SearchQueSetResponse) Descriptor() ([]byte, []int) {
	return file_question_service_proto_rawDescGZIP(), []int{3}
}

func (x *SearchQueSetResponse) GetQueSet() *QueSet {
	if x != nil {
		return x.QueSet
	}
	return nil
}

var File_question_service_proto protoreflect.FileDescriptor

var file_question_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x64, 0x75, 0x5f, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x1a, 0x16, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x40, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x51, 0x75, 0x65,
	0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x64, 0x75, 0x5f,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x06, 0x51, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x13,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x64, 0x75, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x41,
	0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x64, 0x75, 0x5f, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x06, 0x51, 0x75, 0x65, 0x53, 0x65,
	0x74, 0x32, 0xeb, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x1e, 0x2e, 0x65, 0x64, 0x75, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x64, 0x75, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x6c, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x1e, 0x2e, 0x65, 0x64, 0x75, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x64, 0x75, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x30, 0x01, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x65, 0x64, 0x75, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_question_service_proto_rawDescOnce sync.Once
	file_question_service_proto_rawDescData = file_question_service_proto_rawDesc
)

func file_question_service_proto_rawDescGZIP() []byte {
	file_question_service_proto_rawDescOnce.Do(func() {
		file_question_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_question_service_proto_rawDescData)
	})
	return file_question_service_proto_rawDescData
}

var file_question_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_question_service_proto_goTypes = []interface{}{
	(*CreateQueSetRequest)(nil),  // 0: edu_paper.CreateQueSetRequest
	(*CreateQueSetResponse)(nil), // 1: edu_paper.CreateQueSetResponse
	(*SearchQueSetRequest)(nil),  // 2: edu_paper.SearchQueSetRequest
	(*SearchQueSetResponse)(nil), // 3: edu_paper.SearchQueSetResponse
	(*QueSet)(nil),               // 4: edu_paper.QueSet
	(*Filter)(nil),               // 5: edu_paper.Filter
}
var file_question_service_proto_depIdxs = []int32{
	4, // 0: edu_paper.CreateQueSetRequest.QueSet:type_name -> edu_paper.QueSet
	5, // 1: edu_paper.SearchQueSetRequest.filter:type_name -> edu_paper.Filter
	4, // 2: edu_paper.SearchQueSetResponse.QueSet:type_name -> edu_paper.QueSet
	0, // 3: edu_paper.PaperService.CreateQueSet:input_type -> edu_paper.CreateQueSetRequest
	2, // 4: edu_paper.PaperService.SearchQueSet:input_type -> edu_paper.SearchQueSetRequest
	1, // 5: edu_paper.PaperService.CreateQueSet:output_type -> edu_paper.CreateQueSetResponse
	3, // 6: edu_paper.PaperService.SearchQueSet:output_type -> edu_paper.SearchQueSetResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_question_service_proto_init() }
func file_question_service_proto_init() {
	if File_question_service_proto != nil {
		return
	}
	file_question_set_msg_proto_init()
	file_search_filter_msg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_question_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchQueSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchQueSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_question_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_question_service_proto_goTypes,
		DependencyIndexes: file_question_service_proto_depIdxs,
		MessageInfos:      file_question_service_proto_msgTypes,
	}.Build()
	File_question_service_proto = out.File
	file_question_service_proto_rawDesc = nil
	file_question_service_proto_goTypes = nil
	file_question_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PaperServiceClient is the client API for PaperService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaperServiceClient interface {
	CreateQueSet(ctx context.Context, in *CreateQueSetRequest, opts ...grpc.CallOption) (*CreateQueSetResponse, error)
	SearchQueSet(ctx context.Context, in *SearchQueSetRequest, opts ...grpc.CallOption) (PaperService_SearchQueSetClient, error)
}

type paperServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPaperServiceClient(cc grpc.ClientConnInterface) PaperServiceClient {
	return &paperServiceClient{cc}
}

func (c *paperServiceClient) CreateQueSet(ctx context.Context, in *CreateQueSetRequest, opts ...grpc.CallOption) (*CreateQueSetResponse, error) {
	out := new(CreateQueSetResponse)
	err := c.cc.Invoke(ctx, "/edu_paper.PaperService/CreateQueSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paperServiceClient) SearchQueSet(ctx context.Context, in *SearchQueSetRequest, opts ...grpc.CallOption) (PaperService_SearchQueSetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PaperService_serviceDesc.Streams[0], "/edu_paper.PaperService/SearchQueSet", opts...)
	if err != nil {
		return nil, err
	}
	x := &paperServiceSearchQueSetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PaperService_SearchQueSetClient interface {
	Recv() (*SearchQueSetResponse, error)
	grpc.ClientStream
}

type paperServiceSearchQueSetClient struct {
	grpc.ClientStream
}

func (x *paperServiceSearchQueSetClient) Recv() (*SearchQueSetResponse, error) {
	m := new(SearchQueSetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PaperServiceServer is the server API for PaperService service.
type PaperServiceServer interface {
	CreateQueSet(context.Context, *CreateQueSetRequest) (*CreateQueSetResponse, error)
	SearchQueSet(*SearchQueSetRequest, PaperService_SearchQueSetServer) error
}

// UnimplementedPaperServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPaperServiceServer struct {
}

func (*UnimplementedPaperServiceServer) CreateQueSet(context.Context, *CreateQueSetRequest) (*CreateQueSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQueSet not implemented")
}
func (*UnimplementedPaperServiceServer) SearchQueSet(*SearchQueSetRequest, PaperService_SearchQueSetServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchQueSet not implemented")
}

func RegisterPaperServiceServer(s *grpc.Server, srv PaperServiceServer) {
	s.RegisterService(&_PaperService_serviceDesc, srv)
}

func _PaperService_CreateQueSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQueSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaperServiceServer).CreateQueSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/edu_paper.PaperService/CreateQueSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaperServiceServer).CreateQueSet(ctx, req.(*CreateQueSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaperService_SearchQueSet_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchQueSetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PaperServiceServer).SearchQueSet(m, &paperServiceSearchQueSetServer{stream})
}

type PaperService_SearchQueSetServer interface {
	Send(*SearchQueSetResponse) error
	grpc.ServerStream
}

type paperServiceSearchQueSetServer struct {
	grpc.ServerStream
}

func (x *paperServiceSearchQueSetServer) Send(m *SearchQueSetResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PaperService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "edu_paper.PaperService",
	HandlerType: (*PaperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQueSet",
			Handler:    _PaperService_CreateQueSet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchQueSet",
			Handler:       _PaperService_SearchQueSet_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "question_service.proto",
}
